C*MODULE CCSD3A DECK t3BC
C> @brief Updates cluster components
C>
C> @author Jun Shen
C> - April, 2018
C>
C> @param N0 number of frozen core orbitals
C> @param N1 number of occupied alpha orbitals (including frozen core)
C> @param N2 number of occupied beta orbitals (including frozen core)
C> @param N3 number of orbitals (including frozen core and virtual)
C> @param M1 number of active occupied orbitals
C> @param M2 number of active unoccupied orbitals
C> @param K1 number of occupied alpha orbitals
C> @param K2 number of occupied beta orbitals
C> @param K3 number of unoccupied alpha orbitals
C> @param K4 number of unoccupied beta orbitals
C> @param K5 number of non-active occupied orbitals
C> @param K6 number of non-active unoccupied orbitals
C> @param K7 number of active occupied alpha orbitals
C> @param K8 number of active occupied beta orbitals
C> @param K9 number of active unoccupied alpha orbitals
C> @param K0 number of active unoccupied beta orbitals
C> @param FAHH Fock alpha HH array
C> @param FAHP Fock alpha HP array
C> @param FAPP Fock alpha PP array
C> @param FBHH Fock beta HH array
C> @param FBHP Fock beta HP array
C> @param FBPP Fock beta PP array
C> @param VAHHHH Twobody alpha-alpha HHHH array
C> @param VAHHHP Twobody alpha-alpha HHHP array
C> @param VAHHPP Twobody alpha-alpha HHPP array
C> @param VAHPHP Twobody alpha-alpha HPHP array
C> @param VAHPPP Twobody alpha-alpha HPPP array
C> @param VBHHHH Twobody alpha-beta HHHH array
C> @param VBHHHP Twobody alpha-beta HHHP array
C> @param VBHHPH Twobody alpha-beta HHPH array
C> @param VBHHPP Twobody alpha-beta HHPP array
C> @param VBHPHP Twobody alpha-beta HPHP array
C> @param VBHPPH Twobody alpha-beta HPPH array
C> @param VBPHPH Twobody alpha-beta PHPH array
C> @param VBHPPP Twobody alpha-beta HPPP array
C> @param VBPHPP Twobody alpha-beta HPPP array
C> @param VCHHHH Twobody beta-beta HHHH array
C> @param VCHHHP Twobody beta-beta HHHP array
C> @param VCHHPP Twobody beta-beta HHPP array
C> @param VCHPHP Twobody beta-beta HPHP array
C> @param VCHPPP Twobody beta-beta HPPP array
C> @param VAAPPP Twobody alpha-alpha (AP)PPP array
C> @param VBAPPP Twobody alpha-beta (AP)PPP array
C> @param VBPAPP Twobody alpha-beta P(AP)PP array
C> @param VCAPPP Twobody beta-beta (AP)PPP array
C> @param T1A one-body alpha cluster components
C> @param T1B one-body beta cluster components
C> @param T2A two-body alpha-alpha cluster components
C> @param T2B two-body alpha-beta cluster components
C> @param T2C two-body beta-beta cluster components
C> @param T3A three-body (active-alpha)-(alpha)-(alpha) cluster components
C> @param T3B1 three-body (active-alpha)-alpha-beta, (active-alpha)-alpha-beta
C> @param T3B2 three-body
C> (non-active-alpha)-(non-active-alpha)-(active-beta), (non-active-alpha)-(non-active-alpha)-(active-beta)
C> @param T3B3 three-body
C> (alpha)-(alpha)-(non-active-beta), (non-active-alpha)-(non-active-alpha)-(active-beta)
C> @param T3B4 three-body
C> (non-active-alpha)-(non-active-alpha)-(active-beta), (active-alpha)-(alpha)-(beta)
C> @param T3C1 three-body
C> (alpha)-(active-beta)-(beta), (alpha)-(active-beta)-(beta)
C> @param T3C2 three-body
C> (active-alpha)-(non-active-beta)-(non-active-beta),(active-alpha)-(non-active-beta)-(non-active-beta)
C> @param T3C3 three-body
C> (alpha)-(active-beta)-(beta),(active-alpha)-(non-active-beta)-(non-active-beta)
C> @param T3C4 three-body
C> (active-alpha)-(non-active-beta)-(non-active-beta),(alpha)-(active-beta)-(beta)
C> @param T3D three-body (active-beta)-(beta)-(beta) cluster components
C>
C> @note H stands for hole (occupied orbitals), P stands for particle
C> (unnocupied orbitals), and AP stands for active-particle (active
C> unoccupied orbitals). Also all T1, T2, and T3 arrays are read from
C> right to left (i.e. T2(a4,a3,a2,a1) -> (a1)-(a2),(a3)-(a4), where
C> first indices before the comma are occupied indices and the next are
C> unnocupied.
       subroutine t3BC_update(N0,N1,N2,N3,shift,
     & M1,M2,K1,K2,K3,K4,K5,K6,K7,K8,K9,K0,NFT848,
     & FAHH,FAPP,FBHH,FBPP,
     & t1A,t1B,t2A,t2B,t2C,
     & t3B1,t3B4,t3C1,t3C4,
     & V3B1,V3B4,V3C1,V3C4)
C
       integer a,b,c,e,f,g,h,i,j,k,m,n,o,p
       real*8 CoeLeft,shift,PP
       real*8 FAHH(N0+1:N1,N0+1:N1)
       real*8 FAPP(N1+1:N3,N1+1:N3)
       real*8 FBHH(N0+1:N2,N0+1:N2)
       real*8 FBPP(N2+1:N3,N2+1:N3)
       real*8 t1A(N1+1:N3,N0+1:N1)
       real*8 t1B(N2+1:N3,N0+1:N2)
       real*8 t2A(N1+1:N3,N1+1:N3,N0+1:N1,N0+1:N1)
       real*8 t2B(N2+1:N3,N1+1:N3,N0+1:N2,N0+1:N1)
       real*8 t2C(N2+1:N3,N2+1:N3,N0+1:N2,N0+1:N2)
       real*8 t3B1(N2+1:N3,N1+1:N3,N1+1:M2,N0+1:N2,N0+1:N1,M1+1:N1)
       real*8 t3B4(N2+1:N3,N1+1:N3,N1+1:M2,M1+1:N2,N0+1:M1,N0+1:M1)
       real*8 t3C1(N2+1:N3,N2+1:M2,N1+1:N3,N0+1:N2,M1+1:N2,N0+1:N1)
       real*8 t3C4(N2+1:N3,N2+1:M2,N1+1:N3,N0+1:M1,N0+1:M1,M1+1:N1)
       real*8 V3B1(N2+1:N3,N1+1:N3,N1+1:M2,N0+1:N2,N0+1:N1,M1+1:N1)
       real*8 V3B4(N2+1:N3,N1+1:N3,N1+1:M2,M1+1:N2,N0+1:M1,N0+1:M1)
       real*8 V3C1(N2+1:N3,N2+1:M2,N1+1:N3,N0+1:N2,M1+1:N2,N0+1:N1)
       real*8 V3C4(N2+1:N3,N2+1:M2,N1+1:N3,N0+1:M1,N0+1:M1,M1+1:N1)
C
       real*8,allocatable::VBPPP(:,:,:),C1(:,:,:)
       real*8,allocatable::tt3B1(:,:,:)
       real*8,allocatable::tt3B4(:,:,:)
       real*8,allocatable::tt3C1(:,:,:)
       real*8,allocatable::tt3C4(:,:,:)
       real*8,allocatable::U(:,:)
C
       N3B1=0
       do I=M1+1,N1;do j=N0+1,N1;do k=N0+1,N2;do A=N1+1,M2
        N3B1=N3B1+1
       enddo;enddo;enddo;enddo
       allocate(tt3B1(N2+1:N3,N1+1:N3,N3B1))
       tt3B1=0.0d0
       I3B1=0
       do I=M1+1,N1;do j=N0+1,N1;do k=N0+1,N2;do A=N1+1,M2
        I3B1=I3B1+1
        do g=M2+1,N3;do h=M2+1,N3
         tt3B1(h,g,I3B1)=t3B1(h,g,A,k,j,I)
        enddo;enddo
        do e=N1+1,N3;do f=N2+1,N3
         tt3B1(f,e,I3B1)=tt3B1(f,e,I3B1)-t1A(e,I)*t2B(f,A,k,j)
     &                                  +t1A(e,j)*t2B(f,A,k,i)
     &                                  +t1B(f,K)*t2A(e,A,j,i)
        enddo;enddo
       enddo;enddo;enddo;enddo
C
       N3B4=0
       do i=N0+2,M1;do j=N0+1,i-1;do K=M1+1,N2;do A=N1+1,M2
        N3B4=N3B4+1
       enddo;enddo;enddo;enddo
       allocate(tt3B4(N2+1:N3,N1+1:N3,N3B4))
       tt3B4=0.0d0
       I3B4=0
       do i=N0+2,M1;do j=N0+1,i-1;do K=M1+1,N2;do A=N1+1,M2
        I3B4=I3B4+1
        do g=M2+1,N3;do h=M2+1,N3
         tt3B4(h,g,I3B4)=t3B4(h,g,A,K,j,i)
        enddo;enddo
        do e=N1+1,N3;do f=N2+1,N3
         tt3B4(f,e,I3B4)=tt3B4(f,e,I3B4)-t1A(e,i)*t2B(f,A,K,j)
     &                                  +t1A(e,j)*t2B(f,A,K,i)
     &                                  +t1B(f,K)*t2A(e,A,j,i)
        enddo;enddo
       enddo;enddo;enddo;enddo
C
       N3C1=0
       do i=N0+1,N1;do J=M1+1,N2;do k=N0+1,N2;do B=N2+1,M2
        N3C1=N3C1+1
       enddo;enddo;enddo;enddo
       allocate(tt3C1(N2+1:N3,N1+1:N3,N3C1))
       tt3C1=0.0d0
       I3C1=0 
       do i=N0+1,N1;do J=M1+1,N2;do k=N0+1,N2;do B=N2+1,M2
        I3C1=I3C1+1
        do g=M2+1,N3;do h=M2+1,N3
         tt3C1(h,g,I3C1)=t3C1(h,B,g,k,J,i)
        enddo;enddo
        do e=N1+1,N3;do f=N2+1,N3
         tt3C1(f,e,I3C1)=tt3C1(f,e,I3C1)+t1A(e,I)*t2C(f,B,k,J)
     &                                  -t1B(f,J)*t2B(B,e,k,i)
     &                                  +t1B(f,k)*t2B(B,e,J,i)
        enddo;enddo
       enddo;enddo;enddo;enddo
C
       N3C4=0
       do I=M1+1,N1;do j=N0+2,M1;do k=N0+1,j-1;do B=N2+1,M2
        N3C4=N3C4+1
       enddo;enddo;enddo;enddo
       allocate(tt3C4(N2+1:N3,N1+1:N3,N3C4))
       tt3C4=0.0d0
       I3C4=0 
       do I=M1+1,N1;do j=N0+2,M1;do k=N0+1,j-1;do B=N2+1,M2
        I3C4=I3C4+1
        do g=M2+1,N3;do h=M2+1,N3
         tt3C4(h,g,I3C4)=t3C4(h,B,g,k,j,I)
        enddo;enddo
        do e=N1+1,N3;do f=N2+1,N3
         tt3C4(f,e,I3C4)=tt3C4(f,e,I3C4)+t1A(e,I)*t2C(f,B,k,j)
     &                                  -t1B(f,j)*t2B(B,e,k,I)
     &                                  +t1B(f,k)*t2B(B,e,j,I)
        enddo;enddo
       enddo;enddo;enddo;enddo
C      
       allocate(VBPPP(N2+1:N3,N1+1:N3,N1+1:N3))
       do 2000 c=M2+1,N3
        read(NFT848,rec=c-N2+K3+K4)
     &  (((VBPPP(f,b,e),e=N1+1,N3),f=N2+1,N3),b=N1+1,N3)
        allocate(C1(N2+1:N3,N1+1:N3,M2+1:N3))
        do b=M2+1,N3;do e=N1+1,N3;do f=N2+1,N3
         C1(f,e,b)=VBPPP(f,e,b)
        enddo;enddo;enddo
        I2=K6
        I3=K3*K4
C
        allocate(U(M2+1:N3,N3B1))
        I1=N3B1
        call EGEMM(I1,I2,I3,tt3B1,C1,U)
        I3B1=0
        do I=M1+1,N1;do j=N0+1,N1;do k=N0+1,N2;do A=N1+1,M2
         I3B1=I3B1+1
         do b=M2+1,N3
         V3B1(c,b,A,k,j,I)=V3B1(c,b,A,k,j,I)+U(b,I3B1)
         enddo
        enddo;enddo;enddo;enddo
        deallocate(U)
C
        allocate(U(M2+1:N3,N3B4))
        I1=N3B4
        call EGEMM(I1,I2,I3,tt3B4,C1,U)
        I3B4=0
        do i=N0+2,M1;do j=N0+1,i-1;do K=M1+1,N2;do A=N1+1,M2
         I3B4=I3B4+1
         do b=M2+1,N3
         V3B4(c,b,A,K,j,i)=V3B4(c,b,A,K,j,i)+U(b,I3B4)
         enddo
        enddo;enddo;enddo;enddo
        deallocate(U)
C
        I1=N3C1
        allocate(U(M2+1:N3,N3C1))
        call EGEMM(I1,I2,I3,tt3C1,C1,U)
        I3C1=0 
        do i=N0+1,N1;do J=M1+1,N2;do k=N0+1,N2;do A=N2+1,M2
         I3C1=I3C1+1
         do b=M2+1,N3
          V3C1(c,A,b,k,J,i)=V3C1(c,A,b,k,J,i)+U(b,I3C1)
         enddo
        enddo;enddo;enddo;enddo
        deallocate(U)
C
        I1=N3C4
        allocate(U(M2+1:N3,N3C4))
        call EGEMM(I1,I2,I3,tt3C4,C1,U)
        deallocate(C1)
        I3C4=0
        do I=M1+1,N1;do j=N0+2,M1;do k=N0+1,j-1;do A=N2+1,M2
         I3C4=I3C4+1
         do b=M2+1,N3
          V3C4(c,A,b,k,j,I)=V3C4(c,A,b,k,j,I)+U(b,I3C4)
         enddo
        enddo;enddo;enddo;enddo
        deallocate(U)
2000   continue
       deallocate(tt3B1)
       deallocate(tt3B4)
       deallocate(tt3C1)
       deallocate(tt3C4)
       deallocate(VBPPP)
C
       do I=M1+1,N1;do j=N0+1,N1;do k=N0+1,N2
       do A=N1+1,M2;do b=N1+1,N3;do c=N2+1,N3
        if(I.eq.j)cycle
        if(A.eq.b)cycle
        CoeLeft=FBPP(c,c)+FAPP(b,b)+FAPP(A,A)
     &         -FBHH(k,k)-FAHH(j,j)-FAHH(I,I)
     &         +shift
        t3B1(c,b,A,k,j,I)=t3B1(c,b,A,k,j,I)-V3B1(c,b,A,k,j,I)/CoeLeft
       enddo;enddo;enddo
       enddo;enddo;enddo
       do i=N0+2,M1;do j=N0+1,i-1;do K=M1+1,N2
       do A=N1+1,M2;do b=N1+1,N3;do c=N2+1,N3
        if(A.eq.b)cycle
        CoeLeft=FBPP(c,c)+FAPP(b,b)+FAPP(A,A)
     &         -FBHH(K,K)-FAHH(j,j)-FAHH(i,i)
     &         +shift
        t3B4(c,b,A,K,j,i)= t3B4(c,b,A,K,j,i)-V3B4(c,b,A,K,j,i)/CoeLeft
        t3B4(c,b,A,K,i,j)=-t3B4(c,b,A,K,j,i)
       enddo;enddo;enddo
       enddo;enddo;enddo
       do i=N0+1,N1;do J=M1+1,N2;do k=N0+1,N2
       do a=N1+1,N3;do B=N2+1,M2;do c=N2+1,N3
!      do i=N0+1,M1;do J=M1+1,N2;do k=N0+1,M1
!      do a=M2+1,N3;do B=N2+1,M2;do c=M2+1,N3
        if(J.eq.k)cycle
        if(B.eq.c)cycle
        CoeLeft=FBPP(c,c)+FBPP(B,B)+FAPP(a,a)
     &         -FBHH(k,k)-FBHH(J,J)-FAHH(i,i)
     &         +shift
        t3C1(c,B,a,k,J,i)= t3C1(c,B,a,k,J,i)-V3C1(c,B,a,k,J,i)/CoeLeft
       enddo;enddo;enddo
       enddo;enddo;enddo
       do I=M1+1,N1;do j=N0+2,M1;do k=N0+1,j-1
       do a=N1+1,N3;do B=N2+1,M2;do c=N2+1,N3
!      do a=M2+1,N3;do B=N2+1,M2;do c=M2+1,N3
        if(B.eq.c)cycle
        CoeLeft=FBPP(c,c)+FBPP(B,B)+FAPP(a,a)
     &         -FBHH(k,k)-FBHH(j,j)-FAHH(I,I)
     &         +shift
        t3C4(c,B,a,k,j,I)= t3C4(c,B,a,k,j,I)-V3C4(c,B,a,k,j,I)/CoeLeft
        t3C4(c,B,a,j,k,I)=-t3C4(c,B,a,k,j,I)
       enddo;enddo;enddo
       enddo;enddo;enddo
C
       end
